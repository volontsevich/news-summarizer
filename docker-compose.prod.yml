version: '3.8'

# Production override for docker-compose.yml
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  api:
    restart: always
    environment:
      - DEBUG=false
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./static:/app/static:ro  # Mount static files as read-only
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-tg_news_summarizer}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./backups:/backups  # For database backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    restart: always
    volumes:
      - redis_data_prod:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    restart: always
    environment:
      - DEBUG=false
      - LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD-SHELL", "celery -A app.tasks.celery_app inspect ping"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s

  scheduler:
    restart: always
    environment:
      - DEBUG=false
      - LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep celery-beat || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  default:
    name: tg-news-summarizer-prod
